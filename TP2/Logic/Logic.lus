node Not(in:bool) returns(out:bool);
let
	out = not in;
tel

node And(a,b:bool) returns (out:bool);
let
	out = a and b;
tel

node Nand(a,b:bool) returns(out:bool);
let
	out = Not(And(a,b));
tel

node Or(a,b:bool) returns(out:bool);
let
	out = a or b;
tel

node Xor(a,b:bool) returns(out:bool);
let
	out = And(Or(a,b),Not(And(a,b)));
tel

node Logic(a,b:bool) returns(And,Nand,Or,Xor:bool);
let
	And = And(a,b);
	Nand = Nand(a,b);
	Or = Or(a,b);
	Xor = Xor(a,b);
tel